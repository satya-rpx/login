/*Copyright (c) 2019-2020 imaginea.com All Rights Reserved.
 This software is the confidential and proprietary information of imaginea.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with imaginea.com*/
package com.login.dbloan;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Property generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Property`")
public class Property implements Serializable {

    private Integer propertyid;
    private String aadhaarCard;
    private String propertyAddress;
    private String propertyCity;
    private int propertyPincode;
    private CustomerInfo customerInfo;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`propertyid`", nullable = false, scale = 0, precision = 10)
    public Integer getPropertyid() {
        return this.propertyid;
    }

    public void setPropertyid(Integer propertyid) {
        this.propertyid = propertyid;
    }

    @Column(name = "`Aadhaar_Card`", nullable = false, length = 255)
    public String getAadhaarCard() {
        return this.aadhaarCard;
    }

    public void setAadhaarCard(String aadhaarCard) {
        this.aadhaarCard = aadhaarCard;
    }

    @Column(name = "`Property_Address`", nullable = false, length = 255)
    public String getPropertyAddress() {
        return this.propertyAddress;
    }

    public void setPropertyAddress(String propertyAddress) {
        this.propertyAddress = propertyAddress;
    }

    @Column(name = "`Property_City`", nullable = false, length = 255)
    public String getPropertyCity() {
        return this.propertyCity;
    }

    public void setPropertyCity(String propertyCity) {
        this.propertyCity = propertyCity;
    }

    @Column(name = "`Property_Pincode`", nullable = false, scale = 0, precision = 10)
    public int getPropertyPincode() {
        return this.propertyPincode;
    }

    public void setPropertyPincode(int propertyPincode) {
        this.propertyPincode = propertyPincode;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`Aadhaar_Card`", referencedColumnName = "`Aadhaar_Card`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`Property_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public CustomerInfo getCustomerInfo() {
        return this.customerInfo;
    }

    public void setCustomerInfo(CustomerInfo customerInfo) {
        if(customerInfo != null) {
            this.aadhaarCard = customerInfo.getAadhaarCard();
        }

        this.customerInfo = customerInfo;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Property)) return false;
        final Property property = (Property) o;
        return Objects.equals(getPropertyid(), property.getPropertyid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPropertyid());
    }
}